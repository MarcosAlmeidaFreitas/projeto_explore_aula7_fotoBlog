/* Zerando os atributos de margens, preechimentos
e preenchimentos das caixas todos os elementos*/
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Configurando a fonte para que a unidade rem para equivaler 10px
por regra de 3 */
:root{
  font-size: 62.5%;

  /* Utilizando variáveis para cores, para usar tem que 
  chamar a função var()*/
  --color-base-white: white;
  --color-base-gray-100: #f5f5f5;
  --color-base-gray-300: #8d8d99;
  --color-base-gray-900: #202024;

  font-family: 'Mulish', sans-serif;
}

body{
  font-size: 1.6rem;
  background-color: var(--color-base-white);
  color: var(--color-base-gray-900);
}

#app > *{
  border: 1px solid red;
}

#app{
  display: grid;
  /* o Usando o maximo de conteudo para deixar
  fica o footer e header fixo em cima e em baixo
  e o conteudo fica com o maior espaço que é 1fr*/
  grid-template-rows: max-content 1fr max-content;
  height: 100vh;
}

.container{
  padding: 1.6rem 3.2rem;
  width: min(112rem, 100%);
  margin: 0 auto; 
} 

main{
  background-color: var(--color-base-gray-100);
  /* Afim de deixar o footer e o header presos na tela e o scroll
   somente no main. Colocamos o comando abaixo:*/
  overflow-y: scroll;
}



nav ul{
  list-style: none;
  font-size: 1.8rem;
  color: var(--color-base-gray-300);
  font-weight: 700;
}

ul li.active{
  color: var(--color-base-gray-900);
}

header, nav, nav ul{
  display: flex;
  gap:7rem;
  align-items: center;
  justify-content: left;
}


#avatar{
  width: 8rem;
  height: 8rem;
  position: fixed;
  margin-right: 2rem;
  border-radius: 10rem;
}

footer{
  display: flex;
  justify-content: center;
}
